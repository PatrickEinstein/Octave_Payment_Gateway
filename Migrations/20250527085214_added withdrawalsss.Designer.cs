// <auto-generated />
using System;
using CentralPG.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace OCPG.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20250527085214_added withdrawalsss")]
    partial class addedwithdrawalsss
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CentralPG.Core.Models.Entities.AuthTokens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("access_token")
                        .HasColumnType("text");

                    b.Property<long>("expires_in")
                        .HasColumnType("bigint");

                    b.Property<string>("refreshtoken")
                        .HasColumnType("text");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("timeGenerated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Auths");
                });

            modelBuilder.Entity("CentralPG.Core.Models.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("character varying(160)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CentralPG.Core.Models.Entities.PaymentTransactions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("accountNumberMasked")
                        .HasColumnType("text");

                    b.Property<string>("adviceReference")
                        .HasColumnType("text");

                    b.Property<double>("amount")
                        .HasColumnType("double precision");

                    b.Property<double>("amountCollected")
                        .HasColumnType("double precision");

                    b.Property<string>("authFields")
                        .HasColumnType("text");

                    b.Property<string>("authMode")
                        .HasColumnType("text");

                    b.Property<string>("callbackUrl")
                        .HasColumnType("text");

                    b.Property<string>("channel")
                        .HasColumnType("text");

                    b.Property<string>("currencyCode")
                        .HasColumnType("text");

                    b.Property<string>("customerName")
                        .HasColumnType("text");

                    b.Property<bool>("isNotified")
                        .HasColumnType("boolean");

                    b.Property<string>("merchantCode")
                        .HasColumnType("text");

                    b.Property<string>("merchantReference")
                        .HasColumnType("text");

                    b.Property<string>("narration")
                        .HasColumnType("text");

                    b.Property<string>("notificationUrl")
                        .HasColumnType("text");

                    b.Property<string>("paymentDate")
                        .HasColumnType("text");

                    b.Property<string>("paymentReference")
                        .HasColumnType("text");

                    b.Property<string>("processor")
                        .HasColumnType("text");

                    b.Property<string>("processor_message")
                        .HasColumnType("text");

                    b.Property<string>("requestPayload")
                        .HasColumnType("text");

                    b.Property<string>("responsePayload")
                        .HasColumnType("text");

                    b.Property<string>("transactionStatus")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("OCPG.Core.Models.Entities.Cards", b =>
                {
                    b.Property<string>("adviceReference")
                        .HasColumnType("text");

                    b.Property<string>("token")
                        .HasColumnType("text");

                    b.HasKey("adviceReference");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("OCPG.Core.Models.Entities.WalletTransactionHistory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<double>("amount")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("destination_accountName")
                        .HasColumnType("text");

                    b.Property<string>("destination_accountNumber")
                        .HasColumnType("text");

                    b.Property<string>("direction")
                        .HasColumnType("text");

                    b.Property<string>("narration")
                        .HasColumnType("text");

                    b.Property<string>("originator_accountName")
                        .HasColumnType("text");

                    b.Property<string>("originator_accountNumber")
                        .HasColumnType("text");

                    b.Property<string>("processor_reference")
                        .HasColumnType("text");

                    b.Property<int>("provider")
                        .HasColumnType("integer");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<string>("transaction_date")
                        .HasColumnType("text");

                    b.Property<string>("transaction_reference")
                        .HasColumnType("text");

                    b.Property<string>("transaction_type")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("WalletTransactionHistory");
                });

            modelBuilder.Entity("OCPG.Core.Models.Entities.Wallets", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("acccount_trackerId")
                        .HasColumnType("text");

                    b.Property<string>("acccount_trackerRef")
                        .HasColumnType("text");

                    b.Property<double>("account_balance")
                        .HasColumnType("double precision");

                    b.Property<double>("account_mandate")
                        .HasColumnType("double precision");

                    b.Property<string>("account_name")
                        .HasColumnType("text");

                    b.Property<string>("account_number")
                        .HasColumnType("text");

                    b.Property<string>("account_type")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("phone_number")
                        .HasColumnType("text");

                    b.Property<int>("wallet_provider")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("OCPG.Core.Models.Entities.Withdrawals", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<double>("amount")
                        .HasColumnType("double precision");

                    b.Property<string>("bank_accountNumber")
                        .HasColumnType("text");

                    b.Property<int>("channelCode")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("createdAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("currency")
                        .HasColumnType("text");

                    b.Property<string>("narration")
                        .HasColumnType("text");

                    b.Property<string>("processorMsg")
                        .HasColumnType("text");

                    b.Property<string>("processorRef")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<string>("transactionReference")
                        .HasColumnType("text");

                    b.Property<string>("wallet_accountNumber")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Withdrawals");
                });
#pragma warning restore 612, 618
        }
    }
}
